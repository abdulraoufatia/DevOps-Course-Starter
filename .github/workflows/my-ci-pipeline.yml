name: Continuous Integration
on:
  push:
    schedule:
      - cron: '0 0 * * *'
  pull_request:
    branches:
    - main

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Building Test Image
      run: docker build --target test --tag todo_app:test .

    - name: Running Test Image 
      run: docker run --env-file ./.env.test todo_app:test
 
    - name: Running Snyk to check for vulnerabilities
      uses: snyk/actions/python-3.8@master
      env: 
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
 
    - name: Sending Notifications
      uses: act10ns/slack@v1
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      with: 
        status: ${{ job.status }}
        channel: '#slack-notifications'
        message: "GitHub build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
      if: always()
  
  production:
    name: Production
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Placeholder
      run: echo "Publishing!"

    - name: Setting up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Setting up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Authenticating DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Pushing to DockerHub
      if: ${{ github.event_name ==  github.ref }} 
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/todoapp:latest
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/todoapp:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/todoapp:buildcache,mode=max